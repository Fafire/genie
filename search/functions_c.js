var searchData=
[
  ['m_5fsize',['m_size',['../classGPUGenie_1_1inv__table.html#a6b7bf0b47aa1bd477ab84331d4b7f9e3',1,'GPUGenie::inv_table']]],
  ['makepolicy',['MakePolicy',['../namespacegenie.html#a65a8a0a253fab2bc932af6d0c54c0183',1,'genie']]],
  ['match',['Match',['../classgenie_1_1execution__policy_1_1SingleRangeExecutionPolicy.html#a1c1e70e9a7c04e06839fe4aa8ea9a5d7',1,'genie::execution_policy::SingleRangeExecutionPolicy::Match(const std::shared_ptr&lt; const GPUGenie::inv_table &gt; &amp;table, const std::vector&lt; GPUGenie::query &gt; &amp;queries) override final'],['../classgenie_1_1execution__policy_1_1SingleRangeExecutionPolicy.html#a5243937aafd2a6b2da07cd5bbb49cc5c',1,'genie::execution_policy::SingleRangeExecutionPolicy::Match(const std::vector&lt; std::shared_ptr&lt; const GPUGenie::inv_table &gt; &gt; &amp;table, const std::vector&lt; std::vector&lt; GPUGenie::query &gt; &gt; &amp;queries) override final'],['../classgenie_1_1execution__policy_1_1SingleValueExecutionPolicy.html#ae56a7f3fd96a23fa29c536a23d3d8bfa',1,'genie::execution_policy::SingleValueExecutionPolicy::Match(const std::shared_ptr&lt; const GPUGenie::inv_table &gt; &amp;table, const std::vector&lt; GPUGenie::query &gt; &amp;queries) override final'],['../classgenie_1_1execution__policy_1_1SingleValueExecutionPolicy.html#a38c574a58fe32b03431c9249d42217d7',1,'genie::execution_policy::SingleValueExecutionPolicy::Match(const std::vector&lt; std::shared_ptr&lt; const GPUGenie::inv_table &gt; &gt; &amp;table, const std::vector&lt; std::vector&lt; GPUGenie::query &gt; &gt; &amp;queries) override final'],['../classgenie_1_1ExecutionPolicy.html#a33521432a57a0baf2efb78bab7ff0c84',1,'genie::ExecutionPolicy::Match(const std::shared_ptr&lt; const GPUGenie::inv_table &gt; &amp;table, const std::vector&lt; GPUGenie::query &gt; &amp;queries)=0'],['../classgenie_1_1ExecutionPolicy.html#a078e017eb0ad261b04069e9cf0adcec0',1,'genie::ExecutionPolicy::Match(const std::vector&lt; std::shared_ptr&lt; const GPUGenie::inv_table &gt; &gt; &amp;tables, const std::vector&lt; std::vector&lt; GPUGenie::query &gt; &gt; &amp;queries)=0'],['../namespacegenie.html#ad2792d964ef384f74dc1f62a2564bd23',1,'genie::Match()'],['../namespacegenie_1_1matching.html#a74adc9f139fdbf41f73b05d7eabfdeed',1,'genie::matching::Match()'],['../namespaceGPUGenie.html#a517c3e936f60fd6ab8ff967ccb27df31',1,'GPUGenie::match(inv_table &amp;table, vector&lt; query &gt; &amp;queries, device_vector&lt; data_t &gt; &amp;d_data, device_vector&lt; u32 &gt; &amp;d_bitmap, int hash_table_size, int max_load, int bitmap_bits, device_vector&lt; u32 &gt; &amp;d_noiih, device_vector&lt; u32 &gt; &amp;d_threshold, device_vector&lt; u32 &gt; &amp;d_passCount)'],['../namespaceGPUGenie.html#a5fe5679bc2ae16a9bcb0faf5d72dd827',1,'GPUGenie::match(inv_table &amp;table, std::vector&lt; query &gt; &amp;queries, thrust::device_vector&lt; genie::matching::data_t &gt; &amp;d_data, thrust::device_vector&lt; u32 &gt; &amp;d_bitmap, int hash_table_size, int max_load, int bitmap_bits, thrust::device_vector&lt; u32 &gt; &amp;d_noiih, thrust::device_vector&lt; u32 &gt; &amp;d_threshold, thrust::device_vector&lt; u32 &gt; &amp;d_passCount)']]],
  ['match_5fadaptivethreshold_5fintegrated',['match_adaptiveThreshold_integrated',['../namespaceGPUGenie.html#a77f9e39b1fab0a5203d5029b0c0fa410',1,'GPUGenie']]],
  ['match_5fat',['match_AT',['../namespaceGPUGenie.html#a010b21fba4d98857e174be4d403cfe18',1,'GPUGenie']]],
  ['match_5fintegrated',['match_integrated',['../namespaceGPUGenie.html#a001786fb0ef9fcfc341225711d3c73c6',1,'GPUGenie']]],
  ['match_5fintegrated_3c_20devicebitpackingcodec_20_3e',['match_integrated&lt; DeviceBitPackingCodec &gt;',['../namespaceGPUGenie.html#a459833e95ee431efde9c5346ed9ba735',1,'GPUGenie']]],
  ['match_5fintegrated_3c_20devicecompositecodec_3c_20devicebitpackingcodec_2c_20devicecopycodec_20_3e_20_3e',['match_integrated&lt; DeviceCompositeCodec&lt; DeviceBitPackingCodec, DeviceCopyCodec &gt; &gt;',['../namespaceGPUGenie.html#aaac0e4add075199099dcfe20b2a021bc',1,'GPUGenie']]],
  ['match_5fintegrated_3c_20devicecompositecodec_3c_20devicebitpackingcodec_2c_20devicevarintcodec_20_3e_20_3e',['match_integrated&lt; DeviceCompositeCodec&lt; DeviceBitPackingCodec, DeviceVarintCodec &gt; &gt;',['../namespaceGPUGenie.html#a8da7255bb01e9a8c33e1fe43f36a1e40',1,'GPUGenie']]],
  ['match_5fintegrated_3c_20devicecopycodec_20_3e',['match_integrated&lt; DeviceCopyCodec &gt;',['../namespaceGPUGenie.html#a31f7d8cc48c6333e4e2faf1abcd99d2a',1,'GPUGenie']]],
  ['match_5fintegrated_3c_20devicedeltacodec_20_3e',['match_integrated&lt; DeviceDeltaCodec &gt;',['../namespaceGPUGenie.html#a55e25700c7c687a49cb98778a805423e',1,'GPUGenie']]],
  ['match_5fintegrated_3c_20deviceserialcodec_3c_20devicecopycodec_2c_20devicecopycodec_20_3e_20_3e',['match_integrated&lt; DeviceSerialCodec&lt; DeviceCopyCodec, DeviceCopyCodec &gt; &gt;',['../namespaceGPUGenie.html#a6046849ad65c2c12a07286e311cfe7e9',1,'GPUGenie']]],
  ['match_5fintegrated_3c_20deviceserialcodec_3c_20devicedeltacodec_2c_20devicebitpackingcodec_20_3e_20_3e',['match_integrated&lt; DeviceSerialCodec&lt; DeviceDeltaCodec, DeviceBitPackingCodec &gt; &gt;',['../namespaceGPUGenie.html#aa310e840759b5009a5deeb622037e897',1,'GPUGenie']]],
  ['match_5fintegrated_3c_20deviceserialcodec_3c_20devicedeltacodec_2c_20devicecompositecodec_3c_20devicebitpackingcodec_2c_20devicecopycodec_20_3e_20_3e_20_3e',['match_integrated&lt; DeviceSerialCodec&lt; DeviceDeltaCodec, DeviceCompositeCodec&lt; DeviceBitPackingCodec, DeviceCopyCodec &gt; &gt; &gt;',['../namespaceGPUGenie.html#a41831ccb2c85c977178e9568c9499cf4',1,'GPUGenie']]],
  ['match_5fintegrated_3c_20deviceserialcodec_3c_20devicedeltacodec_2c_20devicecompositecodec_3c_20devicebitpackingcodec_2c_20devicevarintcodec_20_3e_20_3e_20_3e',['match_integrated&lt; DeviceSerialCodec&lt; DeviceDeltaCodec, DeviceCompositeCodec&lt; DeviceBitPackingCodec, DeviceVarintCodec &gt; &gt; &gt;',['../namespaceGPUGenie.html#a571aa2e06360d7953ebc027a1c379f52',1,'GPUGenie']]],
  ['match_5fintegrated_3c_20deviceserialcodec_3c_20devicedeltacodec_2c_20devicecopycodec_20_3e_20_3e',['match_integrated&lt; DeviceSerialCodec&lt; DeviceDeltaCodec, DeviceCopyCodec &gt; &gt;',['../namespaceGPUGenie.html#a9c0f08c4c81e5734e505dd8c7dda3f20',1,'GPUGenie']]],
  ['match_5fintegrated_3c_20deviceserialcodec_3c_20devicedeltacodec_2c_20devicedeltacodec_20_3e_20_3e',['match_integrated&lt; DeviceSerialCodec&lt; DeviceDeltaCodec, DeviceDeltaCodec &gt; &gt;',['../namespaceGPUGenie.html#a30a745345fef96b4ca05415ef441126b',1,'GPUGenie']]],
  ['match_5fintegrated_3c_20deviceserialcodec_3c_20devicedeltacodec_2c_20devicevarintcodec_20_3e_20_3e',['match_integrated&lt; DeviceSerialCodec&lt; DeviceDeltaCodec, DeviceVarintCodec &gt; &gt;',['../namespaceGPUGenie.html#abb27697c1d101bc637bbf5571fbb5b30',1,'GPUGenie']]],
  ['match_5fintegrated_3c_20devicevarintcodec_20_3e',['match_integrated&lt; DeviceVarintCodec &gt;',['../namespaceGPUGenie.html#a93dca0862f7f97034f7866c520d7a23d',1,'GPUGenie']]],
  ['match_5fmt',['match_MT',['../namespaceGPUGenie.html#ae6fe001657eda6cb8900efa07fd71f02',1,'GPUGenie::match_MT(vector&lt; inv_table *&gt; &amp;table, vector&lt; vector&lt; query &gt; &gt; &amp;queries, vector&lt; device_vector&lt; data_t &gt; &gt; &amp;d_data, vector&lt; device_vector&lt; u32 &gt; &gt; &amp;d_bitmap, vector&lt; int &gt; &amp;hash_table_size, vector&lt; int &gt; &amp;max_load, int bitmap_bits, vector&lt; device_vector&lt; u32 &gt; &gt; &amp;d_noiih, vector&lt; device_vector&lt; u32 &gt; &gt; &amp;d_threshold, vector&lt; device_vector&lt; u32 &gt; &gt; &amp;d_passCount, size_t start, size_t finish)'],['../namespaceGPUGenie.html#af84641b98673bce7f870d7011d470104',1,'GPUGenie::match_MT(std::vector&lt; inv_table *&gt; &amp;table, std::vector&lt; std::vector&lt; query &gt; &gt; &amp;queries, std::vector&lt; thrust::device_vector&lt; genie::matching::data_t &gt; &gt; &amp;d_data, std::vector&lt; thrust::device_vector&lt; u32 &gt; &gt; &amp;d_bitmap, std::vector&lt; int &gt; &amp;hash_table_size, std::vector&lt; int &gt; &amp;max_load, int bitmap_bits, std::vector&lt; thrust::device_vector&lt; u32 &gt; &gt; &amp;d_noiih, std::vector&lt; thrust::device_vector&lt; u32 &gt; &gt; &amp;d_threshold, std::vector&lt; thrust::device_vector&lt; u32 &gt; &gt; &amp;d_passCount, size_t start, size_t finish)']]],
  ['max',['max',['../classGPUGenie_1_1inv__list.html#a8595f05ff47e4365777223c2db946d10',1,'GPUGenie::inv_list']]],
  ['maxbits',['maxbits',['../structGPUGenie_1_1DeviceBitPackingCodec_1_1DeviceIntegratedBlockPacker.html#a5e016a7fd52bf4c6d735b4ef72a0436b',1,'GPUGenie::DeviceBitPackingCodec::DeviceIntegratedBlockPacker::maxbits()'],['../structGPUGenie_1_1DeviceBitPackingCodec_1_1DeviceNoDeltaBlockPacker.html#ae9c2442e878e9c508abbb9663bc85f56',1,'GPUGenie::DeviceBitPackingCodec::DeviceNoDeltaBlockPacker::maxbits()'],['../classGPUGenie_1_1DeviceBitPackingPrefixedCodec.html#a1a3a7435aa718029468d851921ef808b',1,'GPUGenie::DeviceBitPackingPrefixedCodec::maxbits()']]],
  ['merge_5fknn_5fresults_5ffrom_5fmultiload',['merge_knn_results_from_multiload',['../interface_8cu.html#a34fc8a2f1bd9610d673a9c7cd5f731a9',1,'interface.cu']]],
  ['min',['min',['../classGPUGenie_1_1inv__list.html#ac1336f506281d1fdb7811146ae418c28',1,'GPUGenie::inv_list']]]
];
